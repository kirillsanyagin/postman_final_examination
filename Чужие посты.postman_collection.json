{
	"info": {
		"_postman_id": "f5c7c46f-8fd1-44ab-8241-a94de9104855",
		"name": "Чужие посты",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25293931",
		"_collection_link": "https://blue-firefly-599218.postman.co/workspace/Homework~3ec63002-66dd-4be2-8d5c-d4b81cb7ef48/collection/25293931-f5c7c46f-8fd1-44ab-8241-a94de9104855?action=share&source=collection_link&creator=25293931"
	},
	"item": [
		{
			"name": "Пользователь не авторизован. Авторизация не прошла",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Token",
						"value": "{[token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "kirill19951",
							"type": "text"
						},
						{
							"key": "password",
							"value": "8fe06e1521",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/gateway/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"gateway",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Посты не отображаются у незарегистрированного пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Название ошибки при невалидных данных\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Auth header required X-Auth-Token\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "4daa274b7ce564a390ads019fc",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?owner=notMe",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "owner",
							"value": "notMe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Посты отображаются в порядке от новых к старым",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ID первого поста меньше, чем ID последнего\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].id < responseJson.data[3].id).to.eql(true)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "4daa274b7ce564a390ad773cc30019fc",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?owner=notMe",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "owner",
							"value": "notMe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "При отсутствии следующей страницы параметр nextPage - null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"параметр nextPage - null\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.meta.nextPage).to.eql(null)\r",
							"})\r",
							"// число страниц может измениться. Тест актуален на 13711 страниц"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "4daa274b7ce564a390ad773cc30019fc",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?owner=notMe&page=13711",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "owner",
							"value": "notMe"
						},
						{
							"key": "page",
							"value": "13711"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Отображение 4х постов на странице",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Страница отображает 4 поста при наличии 4х и более постов\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.length).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "4daa274b7ce564a390ad773cc30019fc",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?owner=notMe",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "owner",
							"value": "notMe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cортировка постов в порядке возрастания ID. (Params: order | ASC)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ID первого поста меньше, чем ID последнего\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].id < responseJson.data[3].id).to.eql(true)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?order=ASC&owner=notMe",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "order",
							"value": "ASC"
						},
						{
							"key": "owner",
							"value": "notMe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cортировка постов в порядке убывания ID. (Params: order | DESC)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ID первого поста больше, чем ID последнего\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].id > responseJson.data[3].id).to.eql(true)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?order=DESC&owner=notMe",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "order",
							"value": "DESC"
						},
						{
							"key": "owner",
							"value": "notMe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cортировка по дате публикации (от новых к старым)(Params: sort | createdAt)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?sort=createdAt&owner=notMe",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "sort",
							"value": "createdAt"
						},
						{
							"key": "owner",
							"value": "notMe"
						},
						{
							"key": "page",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"disabled": true
		},
		{
			"key": "token",
			"value": ""
		}
	]
}