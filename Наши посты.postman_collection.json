{
	"info": {
		"_postman_id": "112b2212-f130-4e57-b95b-985577bbd9f8",
		"name": "Наши посты",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25293931",
		"_collection_link": "https://blue-firefly-599218.postman.co/workspace/Homework~3ec63002-66dd-4be2-8d5c-d4b81cb7ef48/collection/25293931-112b2212-f130-4e57-b95b-985577bbd9f8?action=share&source=collection_link&creator=25293931"
	},
	"item": [
		{
			"name": "Авторизация с валидными данными: Латин + цирфы",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var data = pm.response.json();\r",
							"pm.collectionVariables.set (\"token\", data.token);\r",
							"\r",
							"pm.test(\"Отображение валидного ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(33501);\r",
							"});\r",
							"\r",
							"pm.test(\"Отображение валидного логина\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(\"kirill1995\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка наличия пункта массива\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.roles[1]).to.eql(\"R_USER\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Token",
						"value": "{[token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "kirill1995",
							"type": "text"
						},
						{
							"key": "password",
							"value": "8fe06e1521",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/gateway/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"gateway",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Отображение постов на домашней странице",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Страница отображает 10 постов при наличии 10 и более постов\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.length).to.eql(10);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": [],
							"disabled": true
						},
						{
							"key": "title",
							"value": "лес",
							"type": "text"
						},
						{
							"key": "description",
							"value": "дескрип",
							"type": "text"
						},
						{
							"key": "content",
							"value": "контент",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/api/posts/?page=1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"posts",
						""
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение поста на странице и проверка его пунктов",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Валидность пунктов полученного ответа\", () => {\r",
							"    // разобрать json ответ и проверить три свойства\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].id).to.eql(99176);\r",
							"    pm.expect(responseJson.data[0].title).to.be.a('string');\r",
							"    pm.expect(responseJson.data[0].description).to.be.a('string');\r",
							"    pm.expect(responseJson.data[0].content).to.be.a('string');\r",
							"    pm.expect(responseJson.data[0].authorId).to.be.a('number');\r",
							"    pm.expect(responseJson.data[0].mainImage.id).to.eql(null);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?id=99176&page=1",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "id",
							"value": "99176"
						},
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка получения пустого массива при переход на несуществующую страницу.(пример: 10 страница)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Валидность пунктов полученного ответа\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data).to.be.empty; \r",
							"    pm.expect({\"prevPage\": \"\",\"nextPage\": \"\",\"count\": \"\"}).to.have.all.keys('prevPage', 'nextPage', \"count\");          \r",
							"    pm.expect(responseJson.meta.prevPage).to.eql(9);\r",
							"    pm.expect(responseJson.meta.nextPage).to.eql(null);\r",
							"    pm.expect(responseJson.meta.count).to.eql(5);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?page=10",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "page",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Отображение заглушки при отсутствии картинки",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Проверка наличии заглушки\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].mainImage.id).to.eql(null); \r",
							"    pm.expect(responseJson.data[0].mainImage.cdnUrl).to.be.empty; \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cортировка по дате публикации (от новых к старым)(Params: sort | createdAt)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?sort=createdAt",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "sort",
							"value": "createdAt"
						},
						{
							"key": "order",
							"value": "ASC",
							"disabled": true
						},
						{
							"key": "page",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cортировка постов в порядке возрастания ID. (Params: order | ASC)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ID первого поста меньше, чем ID последнего\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].id < responseJson.data[3].id).to.eql(true)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?order=ASC",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "order",
							"value": "ASC"
						},
						{
							"key": "page",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cортировка постов в порядке убывания ID. (Params: order | DESC)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ID первого поста больше, чем ID последнего\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.data[0].id > responseJson.data[3].id).to.eql(true)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://test-stand.gb.ru/api/posts?order=DESC",
					"protocol": "https",
					"host": [
						"test-stand",
						"gb",
						"ru"
					],
					"path": [
						"api",
						"posts"
					],
					"query": [
						{
							"key": "order",
							"value": "DESC"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}